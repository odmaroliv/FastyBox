@namespace FastyBox.Web.Shared.Components

<div class="@GetAlertClasses()" role="alert">
    @if (!string.IsNullOrEmpty(Icon))
    {
        <div class="flex-shrink-0 mr-3">
            <i class="@Icon"></i>
        </div>
    }
    else
    {
        <div class="flex-shrink-0 mr-3">
            @switch (Type)
            {
                case "success":
                    <svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                    </svg>
                    break;
                case "danger":
                    <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                    </svg>
                    break;
                case "warning":
                    <svg class="h-5 w-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                    </svg>
                    break;
                case "info":
                    <svg class="h-5 w-5 text-blue-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                    </svg>
                    break;
            }
        </div>
    }

    <div>
        @if (!string.IsNullOrEmpty(Title))
        {
            <h3 class="text-sm font-medium @GetTextColorClass()">@Title</h3>
        }
        <div class="text-sm @(string.IsNullOrEmpty(Title) ? GetTextColorClass() : "mt-1")">
            @ChildContent
        </div>
    </div>

    @if (Dismissible)
    {
        <div class="ml-auto pl-3">
            <div class="-mx-1.5 -my-1.5">
                <button type="button" class="@GetDismissButtonClass()" @onclick="OnDismiss">
                    <span class="sr-only">Dismiss</span>
                    <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                    </svg>
                </button>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public string Type { get; set; } = "info";

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string Icon { get; set; }

    [Parameter]
    public bool Dismissible { get; set; }

    [Parameter]
    public string Class { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public EventCallback OnDismiss { get; set; }

    private string GetAlertClasses()
    {
        var baseClasses = "flex items-start p-4 rounded-md ";

        var alertClass = Type switch
        {
            "success" => "alert-success ",
            "danger" => "alert-danger ",
            "warning" => "alert-warning ",
            "info" => "alert-info ",
            _ => "alert-info "
        };

        return $"{baseClasses} {alertClass} {Class}".TrimEnd();
    }

    private string GetTextColorClass()
    {
        return Type switch
        {
            "success" => "text-green-800 dark:text-green-200",
            "danger" => "text-red-800 dark:text-red-200",
            "warning" => "text-yellow-800 dark:text-yellow-200",
            "info" => "text-blue-800 dark:text-blue-200",
            _ => "text-blue-800 dark:text-blue-200"
        };
    }

    private string GetDismissButtonClass()
    {
        return Type switch
        {
            "success" => "inline-flex bg-green-50 dark:bg-transparent text-green-500 hover:bg-green-100 dark:hover:bg-green-900 rounded-md p-1.5 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500",
            "danger" => "inline-flex bg-red-50 dark:bg-transparent text-red-500 hover:bg-red-100 dark:hover:bg-red-900 rounded-md p-1.5 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500",
            "warning" => "inline-flex bg-yellow-50 dark:bg-transparent text-yellow-500 hover:bg-yellow-100 dark:hover:bg-yellow-900 rounded-md p-1.5 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500",
            "info" => "inline-flex bg-blue-50 dark:bg-transparent text-blue-500 hover:bg-blue-100 dark:hover:bg-blue-900 rounded-md p-1.5 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500",
            _ => "inline-flex bg-blue-50 dark:bg-transparent text-blue-500 hover:bg-blue-100 dark:hover:bg-blue-900 rounded-md p-1.5 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
        };
    }
}
