@namespace FastyBox.Web.Shared.Components
@typeparam TValue
<div class="@GetContainerClass()">
    @if (!string.IsNullOrEmpty(Label))
    {
        <label for="@Id" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">@Label</label>
    }

    <select id="@Id" class="@GetSelectClass()" disabled="@Disabled" @bind="CurrentValue" @onblur="OnBlur">
        @if (!string.IsNullOrEmpty(Placeholder))
        {
            <option value="" disabled selected>@Placeholder</option>
        }
        @ChildContent
    </select>

    @if (!string.IsNullOrEmpty(HelperText))
    {
        <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">@HelperText</p>
    }

    @if (HasError && ErrorMessages != null && ErrorMessages.Any())
    {
        <p class="mt-1 text-sm text-red-600 dark:text-red-400">@string.Join(", ", ErrorMessages)</p>
    }
</div>

@code {
    [Parameter]
    public string Id { get; set; } = Guid.NewGuid().ToString();

    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public string Placeholder { get; set; }

    [Parameter]
    public string HelperText { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public string Class { get; set; }

    [Parameter]
    public bool FullWidth { get; set; } = true;

    [Parameter]
    public bool HasError { get; set; }

    [Parameter]
    public IEnumerable<string> ErrorMessages { get; set; }

    [Parameter]
    public TValue Value { get; set; }

    [Parameter]
    public EventCallback<TValue> ValueChanged { get; set; }

    [Parameter]
    public EventCallback<FocusEventArgs> OnBlur { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private TValue CurrentValue
    {
        get => Value;
        set
        {
            if (!EqualityComparer<TValue>.Default.Equals(Value, value))
            {
                Value = value;
                ValueChanged.InvokeAsync(value);
            }
        }
    }

    private string GetContainerClass()
    {
        return FullWidth ? "w-full" : "";
    }

    private string GetSelectClass()
    {
        var classes = "select ";

        if (HasError)
        {
            classes += "border-red-300 text-red-900 placeholder-red-300 focus:ring-red-500 focus:border-red-500 dark:border-red-600 dark:focus:border-red-500 dark:focus:ring-red-500 ";
        }

        if (!string.IsNullOrEmpty(Class))
        {
            classes += $"{Class} ";
        }

        return classes.TrimEnd();
    }
}
