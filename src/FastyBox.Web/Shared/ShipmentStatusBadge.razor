@using FastyBox.Domain.Enums
@using FastyBox.Web.Resources
@using Microsoft.Extensions.Localization
@using MudBlazor
@inject IStringLocalizer<SharedResource> L

<MudChip T="string" Color="@GetStatusColor()" Size="Size.Small">
    @GetStatusText()
</MudChip>

@code {
    [Parameter]
    public ShipmentStatus Status { get; set; }

    private Color GetStatusColor() => Status switch
    {
        ShipmentStatus.Draft => Color.Default,
        ShipmentStatus.Submitted => Color.Info,
        ShipmentStatus.AwaitingDocuments => Color.Warning,
        ShipmentStatus.DocumentsReviewed => Color.Info,
        ShipmentStatus.AwaitingPayment => Color.Warning,
        ShipmentStatus.AwaitingArrival => Color.Info,
        ShipmentStatus.ReceivedInWarehouse => Color.Info,
        ShipmentStatus.Processing => Color.Info,
        ShipmentStatus.InTransit => Color.Primary,
        ShipmentStatus.InDelivery => Color.Primary,
        ShipmentStatus.Delivered => Color.Success,
        ShipmentStatus.Exception => Color.Error,
        ShipmentStatus.Cancelled => Color.Error,
        _ => Color.Default
    };

    private string GetStatusText() => Status switch
    {
        ShipmentStatus.Draft => L["StatusDraft"],
        ShipmentStatus.Submitted => L["StatusSubmitted"],
        ShipmentStatus.AwaitingDocuments => L["StatusAwaitingDocuments"],
        ShipmentStatus.DocumentsReviewed => L["StatusDocumentsReviewed"],
        ShipmentStatus.AwaitingPayment => L["StatusAwaitingPayment"],
        ShipmentStatus.AwaitingArrival => L["StatusAwaitingArrival"],
        ShipmentStatus.ReceivedInWarehouse => L["StatusReceivedInWarehouse"],
        ShipmentStatus.Processing => L["StatusProcessing"],
        ShipmentStatus.InTransit => L["StatusInTransit"],
        ShipmentStatus.InDelivery => L["StatusInDelivery"],
        ShipmentStatus.Delivered => L["StatusDelivered"],
        ShipmentStatus.Exception => L["StatusException"],
        ShipmentStatus.Cancelled => L["StatusCancelled"],
        _ => Status.ToString()
    };
}
